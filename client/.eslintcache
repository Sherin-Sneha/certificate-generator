[{"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\index.js":"1","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\App.js":"3","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\Routes.js":"4","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\theme\\index.js":"5","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\temp.js":"6","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\pdf\\certificateGenertorWithPdf.js":"7","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\pages\\csv\\csvUpload.js":"8","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\theme\\typography.js":"9","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\theme\\shadow.js":"10","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\pages\\404\\index.js":"11","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\pages\\ImageCanvas\\index.js":"12","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\csv.js":"13","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\constants\\index.js":"14","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\Button\\index.js":"15","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\image\\cecrtificateGeneratorByImage.js":"16","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\index.js":"17","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\data\\index.js":"18","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\index.js":"19","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\LoginDialog.js":"20","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\Logo.js":"21","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\Account.js":"22","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\Item.js":"23","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\HeaderItems.js":"24","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\table.js":"25","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\index.js":"26","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\App.js":"27","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\reportWebVitals.js":"28","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\Routes.js":"29","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\theme\\index.js":"30","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\temp.js":"31","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\pdf\\certificateGenertorWithPdf.js":"32","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\pages\\csv\\csvUpload.js":"33","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\pages\\404\\index.js":"34","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\pages\\ImageCanvas\\index.js":"35","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\theme\\typography.js":"36","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\theme\\shadow.js":"37","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\csv.js":"38","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\constants\\index.js":"39","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\image\\cecrtificateGeneratorByImage.js":"40","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\Button\\index.js":"41","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\index.js":"42","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\table.js":"43","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\index.js":"44","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\data\\index.js":"45","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\LoginDialog.js":"46","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\Account.js":"47","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\Item.js":"48","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\Logo.js":"49","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\HeaderItems.js":"50"},{"size":510,"mtime":1619788396958,"results":"51","hashOfConfig":"52"},{"size":369,"mtime":1619788396976,"results":"53","hashOfConfig":"52"},{"size":253,"mtime":1619788396935,"results":"54","hashOfConfig":"52"},{"size":805,"mtime":1619788396938,"results":"55","hashOfConfig":"52"},{"size":1661,"mtime":1620220737391,"results":"56","hashOfConfig":"52"},{"size":15322,"mtime":1619788396952,"results":"57","hashOfConfig":"52"},{"size":7096,"mtime":1619788396949,"results":"58","hashOfConfig":"52"},{"size":785,"mtime":1619788396975,"results":"59","hashOfConfig":"52"},{"size":842,"mtime":1620220774844,"results":"60","hashOfConfig":"52"},{"size":3313,"mtime":1619788396980,"results":"61","hashOfConfig":"52"},{"size":609,"mtime":1619788396969,"results":"62","hashOfConfig":"52"},{"size":665,"mtime":1619788396971,"results":"63","hashOfConfig":"52"},{"size":4632,"mtime":1619788396943,"results":"64","hashOfConfig":"52"},{"size":32,"mtime":1619788396954,"results":"65","hashOfConfig":"52"},{"size":782,"mtime":1619788396939,"results":"66","hashOfConfig":"52"},{"size":9717,"mtime":1620218847178,"results":"67","hashOfConfig":"52"},{"size":1075,"mtime":1619788396967,"results":"68","hashOfConfig":"52"},{"size":1007,"mtime":1620223558103,"results":"69","hashOfConfig":"52"},{"size":5196,"mtime":1619788396966,"results":"70","hashOfConfig":"52"},{"size":1935,"mtime":1619788396964,"results":"71","hashOfConfig":"52"},{"size":255,"mtime":1619788396965,"results":"72","hashOfConfig":"52"},{"size":4051,"mtime":1619788396961,"results":"73","hashOfConfig":"52"},{"size":305,"mtime":1619788396963,"results":"74","hashOfConfig":"52"},{"size":1178,"mtime":1619788396961,"results":"75","hashOfConfig":"52"},{"size":3263,"mtime":1619788396950,"results":"76","hashOfConfig":"52"},{"size":510,"mtime":1621951735141,"results":"77","hashOfConfig":"78"},{"size":253,"mtime":1621951735134,"results":"79","hashOfConfig":"78"},{"size":369,"mtime":1621951735147,"results":"80","hashOfConfig":"78"},{"size":805,"mtime":1621951735134,"results":"81","hashOfConfig":"78"},{"size":1661,"mtime":1621951735148,"results":"82","hashOfConfig":"78"},{"size":15322,"mtime":1621951735139,"results":"83","hashOfConfig":"78"},{"size":7096,"mtime":1621951735138,"results":"84","hashOfConfig":"78"},{"size":785,"mtime":1621951735147,"results":"85","hashOfConfig":"78"},{"size":609,"mtime":1621951735145,"results":"86","hashOfConfig":"78"},{"size":665,"mtime":1621951735146,"results":"87","hashOfConfig":"78"},{"size":842,"mtime":1621951735149,"results":"88","hashOfConfig":"78"},{"size":3313,"mtime":1621951735149,"results":"89","hashOfConfig":"78"},{"size":4632,"mtime":1621951735136,"results":"90","hashOfConfig":"78"},{"size":32,"mtime":1621951735140,"results":"91","hashOfConfig":"78"},{"size":9717,"mtime":1621951735137,"results":"92","hashOfConfig":"78"},{"size":782,"mtime":1621951735135,"results":"93","hashOfConfig":"78"},{"size":1075,"mtime":1621951735144,"results":"94","hashOfConfig":"78"},{"size":3263,"mtime":1621951735138,"results":"95","hashOfConfig":"78"},{"size":5196,"mtime":1621951735144,"results":"96","hashOfConfig":"78"},{"size":1007,"mtime":1621952199965,"results":"97","hashOfConfig":"78"},{"size":1935,"mtime":1621951735143,"results":"98","hashOfConfig":"78"},{"size":4051,"mtime":1621951735142,"results":"99","hashOfConfig":"78"},{"size":305,"mtime":1621951735142,"results":"100","hashOfConfig":"78"},{"size":255,"mtime":1621951735143,"results":"101","hashOfConfig":"78"},{"size":1178,"mtime":1621951735142,"results":"102","hashOfConfig":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"1dsbfa7",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"105"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"105"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"105"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"105"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aovf9k",{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\index.js",[],["212","213"],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\App.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\Routes.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\theme\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\temp.js",["214"],"//------------------------------------------------\r\n// A temporary file just to test out things, Nothing to do or is related with main codebase\r\n//Please ignore\r\n//------------------------------------------------\r\n/* eslint-disable no-use-before-define */\r\nimport React from 'react'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  }\r\n}))\r\n\r\nexport default function Tags() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Autocomplete\r\n        multiple\r\n        id=\"tags-outlined\"\r\n        options={top100Films}\r\n        getOptionLabel={(option) => option.title}\r\n        defaultValue={[top100Films[13]]}\r\n        onChange={(event, newValue) => {\r\n          console.log(event)\r\n          console.log(newValue)\r\n        }}\r\n        // filterSelectedOptions\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"outlined\"\r\n            label=\"filterSelectedOptions\"\r\n            placeholder=\"Favorites\"\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'Léon: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n  { title: 'Casablanca', year: 1942 },\r\n  { title: 'City Lights', year: 1931 },\r\n  { title: 'Psycho', year: 1960 },\r\n  { title: 'The Green Mile', year: 1999 },\r\n  { title: 'The Intouchables', year: 2011 },\r\n  { title: 'Modern Times', year: 1936 },\r\n  { title: 'Raiders of the Lost Ark', year: 1981 },\r\n  { title: 'Rear Window', year: 1954 },\r\n  { title: 'The Pianist', year: 2002 },\r\n  { title: 'The Departed', year: 2006 },\r\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n  { title: 'Back to the Future', year: 1985 },\r\n  { title: 'Whiplash', year: 2014 },\r\n  { title: 'Gladiator', year: 2000 },\r\n  { title: 'Memento', year: 2000 },\r\n  { title: 'The Prestige', year: 2006 },\r\n  { title: 'The Lion King', year: 1994 },\r\n  { title: 'Apocalypse Now', year: 1979 },\r\n  { title: 'Alien', year: 1979 },\r\n  { title: 'Sunset Boulevard', year: 1950 },\r\n  {\r\n    title:\r\n      'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\r\n    year: 1964\r\n  },\r\n  { title: 'The Great Dictator', year: 1940 },\r\n  { title: 'Cinema Paradiso', year: 1988 },\r\n  { title: 'The Lives of Others', year: 2006 },\r\n  { title: 'Grave of the Fireflies', year: 1988 },\r\n  { title: 'Paths of Glory', year: 1957 },\r\n  { title: 'Django Unchained', year: 2012 },\r\n  { title: 'The Shining', year: 1980 },\r\n  { title: 'WALL·E', year: 2008 },\r\n  { title: 'American Beauty', year: 1999 },\r\n  { title: 'The Dark Knight Rises', year: 2012 },\r\n  { title: 'Princess Mononoke', year: 1997 },\r\n  { title: 'Aliens', year: 1986 },\r\n  { title: 'Oldboy', year: 2003 },\r\n  { title: 'Once Upon a Time in America', year: 1984 },\r\n  { title: 'Witness for the Prosecution', year: 1957 },\r\n  { title: 'Das Boot', year: 1981 },\r\n  { title: 'Citizen Kane', year: 1941 },\r\n  { title: 'North by Northwest', year: 1959 },\r\n  { title: 'Vertigo', year: 1958 },\r\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n  { title: 'Reservoir Dogs', year: 1992 },\r\n  { title: 'Braveheart', year: 1995 },\r\n  { title: 'M', year: 1931 },\r\n  { title: 'Requiem for a Dream', year: 2000 },\r\n  { title: 'Amélie', year: 2001 },\r\n  { title: 'A Clockwork Orange', year: 1971 },\r\n  { title: 'Like Stars on Earth', year: 2007 },\r\n  { title: 'Taxi Driver', year: 1976 },\r\n  { title: 'Lawrence of Arabia', year: 1962 },\r\n  { title: 'Double Indemnity', year: 1944 },\r\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\r\n  { title: 'Amadeus', year: 1984 },\r\n  { title: 'To Kill a Mockingbird', year: 1962 },\r\n  { title: 'Toy Story 3', year: 2010 },\r\n  { title: 'Logan', year: 2017 },\r\n  { title: 'Full Metal Jacket', year: 1987 },\r\n  { title: 'Dangal', year: 2016 },\r\n  { title: 'The Sting', year: 1973 },\r\n  { title: '2001: A Space Odyssey', year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: 'Toy Story', year: 1995 },\r\n  { title: 'Bicycle Thieves', year: 1948 },\r\n  { title: 'The Kid', year: 1921 },\r\n  { title: 'Inglourious Basterds', year: 2009 },\r\n  { title: 'Snatch', year: 2000 },\r\n  { title: '3 Idiots', year: 2009 },\r\n  { title: 'Monty Python and the Holy Grail', year: 1975 }\r\n]\r\n\r\n/* eslint-disable no-use-before-define */\r\n// import React from 'react';\r\n// import { useTheme, fade, makeStyles } from '@material-ui/core/styles';\r\n// import Popper from '@material-ui/core/Popper';\r\n// import SettingsIcon from '@material-ui/icons/Settings';\r\n// import CloseIcon from '@material-ui/icons/Close';\r\n// import DoneIcon from '@material-ui/icons/Done';\r\n// import Autocomplete from '@material-ui/lab/Autocomplete';\r\n// import ButtonBase from '@material-ui/core/ButtonBase';\r\n// import InputBase from '@material-ui/core/InputBase';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     width: 221,\r\n//     fontSize: 13,\r\n//   },\r\n//   button: {\r\n//     fontSize: 13,\r\n//     width: '100%',\r\n//     textAlign: 'left',\r\n//     paddingBottom: 8,\r\n//     color: '#586069',\r\n//     fontWeight: 600,\r\n//     '&:hover,&:focus': {\r\n//       color: '#0366d6',\r\n//     },\r\n//     '& span': {\r\n//       width: '100%',\r\n//     },\r\n//     '& svg': {\r\n//       width: 16,\r\n//       height: 16,\r\n//     },\r\n//   },\r\n//   tag: {\r\n//     marginTop: 3,\r\n//     height: 20,\r\n//     width: 400,\r\n//     padding: '.15em 4px',\r\n//     fontWeight: 600,\r\n//     lineHeight: '15px',\r\n//     borderRadius: 2,\r\n//   },\r\n//   popper: {\r\n//     border: '1px solid rgba(27,31,35,.15)',\r\n//     boxShadow: '0 3px 12px rgba(27,31,35,.15)',\r\n//     borderRadius: 3,\r\n//     width: 300,\r\n//     zIndex: 1,\r\n//     fontSize: 13,\r\n//     color: '#586069',\r\n//     backgroundColor: '#f6f8fa',\r\n//   },\r\n//   header: {\r\n//     borderBottom: '1px solid #e1e4e8',\r\n//     padding: '8px 10px',\r\n//     fontWeight: 600,\r\n//   },\r\n//   inputBase: {\r\n//     padding: 10,\r\n//     width: '100%',\r\n//     borderBottom: '1px solid #dfe2e5',\r\n//     '& input': {\r\n//       borderRadius: 4,\r\n//       backgroundColor: theme.palette.common.white,\r\n//       padding: 8,\r\n//       transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n//       border: '1px solid #ced4da',\r\n//       fontSize: 14,\r\n//       '&:focus': {\r\n//         boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n//         borderColor: theme.palette.primary.main,\r\n//       },\r\n//     },\r\n//   },\r\n//   paper: {\r\n//     boxShadow: 'none',\r\n//     margin: 0,\r\n//     color: '#586069',\r\n//     fontSize: 13,\r\n//   },\r\n//   option: {\r\n//     minHeight: 'auto',\r\n//     alignItems: 'flex-start',\r\n//     padding: 8,\r\n//     '&[aria-selected=\"true\"]': {\r\n//       backgroundColor: 'transparent',\r\n//     },\r\n//     '&[data-focus=\"true\"]': {\r\n//       backgroundColor: theme.palette.action.hover,\r\n//     },\r\n//   },\r\n//   popperDisablePortal: {\r\n//     position: 'relative',\r\n//   },\r\n//   iconSelected: {\r\n//     width: 17,\r\n//     height: 17,\r\n//     marginRight: 5,\r\n//     marginLeft: -2,\r\n//   },\r\n//   color: {\r\n//     width: 14,\r\n//     height: 14,\r\n//     flexShrink: 0,\r\n//     borderRadius: 3,\r\n//     marginRight: 8,\r\n//     marginTop: 2,\r\n//   },\r\n//   text: {\r\n//     flexGrow: 1,\r\n//   },\r\n//   close: {\r\n//     opacity: 0.6,\r\n//     width: 18,\r\n//     height: 18,\r\n//   },\r\n// }));\r\n\r\n// export default function GitHubLabel() {\r\n//   const classes = useStyles();\r\n//   const [anchorEl, setAnchorEl] = React.useState(null);\r\n//   const [value, setValue] = React.useState([labels[1], labels[11]]);\r\n//   const [pendingValue, setPendingValue] = React.useState([]);\r\n//   const theme = useTheme();\r\n\r\n//   const handleClick = (event) => {\r\n//     setPendingValue(value);\r\n//     setAnchorEl(event.currentTarget);\r\n//   };\r\n\r\n//   const handleClose = (event, reason) => {\r\n//     if (reason === 'toggleInput') {\r\n//       return;\r\n//     }\r\n//     setValue(pendingValue);\r\n//     if (anchorEl) {\r\n//       anchorEl.focus();\r\n//     }\r\n//     setAnchorEl(null);\r\n//     console.log(value)\r\n//   };\r\n\r\n//   const open = Boolean(anchorEl);\r\n//   const id = open ? 'github-label' : undefined;\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <div className={classes.root}>\r\n//         <ButtonBase\r\n//           disableRipple\r\n//           className={classes.button}\r\n//           aria-describedby={id}\r\n//           onClick={handleClick}\r\n//         >\r\n//           <span>Labels</span>\r\n//           <SettingsIcon />\r\n//         </ButtonBase>\r\n//         {value.map((label) => (\r\n//           <div\r\n//             key={label.name}\r\n//             className={classes.tag}\r\n//             style={{\r\n//               backgroundColor: label.color,\r\n//               color: theme.palette.getContrastText(label.color),\r\n//             }}\r\n//           >\r\n//             {label.name}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       <Popper\r\n//         id={id}\r\n//         open={open}\r\n//         anchorEl={anchorEl}\r\n//         placement=\"bottom-start\"\r\n//         className={classes.popper}\r\n//       >\r\n//         <div className={classes.header}>Apply labels to this pull request</div>\r\n//         <Autocomplete\r\n//           open\r\n//           onClose={handleClose}\r\n//           multiple\r\n//           classes={{\r\n//             paper: classes.paper,\r\n//             option: classes.option,\r\n//             popperDisablePortal: classes.popperDisablePortal,\r\n//           }}\r\n//           value={pendingValue}\r\n//           onChange={(event, newValue) => {\r\n//             setPendingValue(newValue);\r\n//           }}\r\n//           disableCloseOnSelect\r\n//           disablePortal\r\n//           renderTags={() => null}\r\n//           noOptionsText=\"No labels\"\r\n//           renderOption={(option, { selected }) => (\r\n//             <React.Fragment>\r\n//               <DoneIcon\r\n//                 className={classes.iconSelected}\r\n//                 style={{ visibility: selected ? 'visible' : 'hidden' }}\r\n//               />\r\n//               <span className={classes.color} style={{ backgroundColor: option.color }} />\r\n//               <div className={classes.text}>\r\n//                 {option.name}\r\n//                 <br />\r\n//                 {option.description}\r\n//               </div>\r\n//               <CloseIcon\r\n//                 className={classes.close}\r\n//                 style={{ visibility: selected ? 'visible' : 'hidden' }}\r\n//               />\r\n//             </React.Fragment>\r\n//           )}\r\n//           options={[...labels].sort((a, b) => {\r\n//             // Display the selected labels first.\r\n//             let ai = value.indexOf(a);\r\n//             ai = ai === -1 ? value.length + labels.indexOf(a) : ai;\r\n//             let bi = value.indexOf(b);\r\n//             bi = bi === -1 ? value.length + labels.indexOf(b) : bi;\r\n//             return ai - bi;\r\n//           })}\r\n//           getOptionLabel={(option) => option.name}\r\n//           renderInput={(params) => (\r\n//             <InputBase\r\n//               ref={params.InputProps.ref}\r\n//               inputProps={params.inputProps}\r\n//               autoFocus\r\n//               className={classes.inputBase}\r\n//             />\r\n//           )}\r\n//         />\r\n//       </Popper>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\n// // From https://github.com/abdonrd/github-labels\r\n// const labels = [\r\n//   {\r\n//     name: 'good first issue',\r\n//     color: '#7057ff',\r\n//     description: 'Good for newcomers',\r\n//   },\r\n//   {\r\n//     name: 'help wanted',\r\n//     color: '#008672',\r\n//     description: 'Extra attention is needed',\r\n//   },\r\n//   {\r\n//     name: 'priority: critical',\r\n//     color: '#b60205',\r\n//     description: '',\r\n//   },\r\n//   {\r\n//     name: 'priority: high',\r\n//     color: '#d93f0b',\r\n//     description: '',\r\n//   },\r\n//   {\r\n//     name: 'priority: low',\r\n//     color: '#0e8a16',\r\n//     description: '',\r\n//   },\r\n//   {\r\n//     name: 'priority: medium',\r\n//     color: '#fbca04',\r\n//     description: '',\r\n//   },\r\n//   {\r\n//     name: \"status: can't reproduce\",\r\n//     color: '#fec1c1',\r\n//     description: '',\r\n//   },\r\n//   {\r\n//     name: 'status: confirmed',\r\n//     color: '#215cea',\r\n//     description: '',\r\n//   },\r\n//   {\r\n//     name: 'status: duplicate',\r\n//     color: '#cfd3d7',\r\n//     description: 'This issue or pull request already exists',\r\n//   },\r\n//   {\r\n//     name: 'status: needs information',\r\n//     color: '#fef2c0',\r\n//     description: '',\r\n//   },\r\n//   {\r\n//     name: 'status: wont do/fix',\r\n//     color: '#eeeeee',\r\n//     description: 'This will not be worked on',\r\n//   },\r\n//   {\r\n//     name: 'type: bug',\r\n//     color: '#d73a4a',\r\n//     description: \"Something isn't working\",\r\n//   },\r\n//   {\r\n//     name: 'type: discussion',\r\n//     color: '#d4c5f9',\r\n//     description: '',\r\n//   },\r\n//   {\r\n//     name: 'type: documentation',\r\n//     color: '#006b75',\r\n//     description: '',\r\n//   },\r\n//   {\r\n//     name: 'type: enhancement',\r\n//     color: '#84b6eb',\r\n//     description: '',\r\n//   },\r\n//   {\r\n//     name: 'type: epic',\r\n//     color: '#3e4b9e',\r\n//     description: 'A theme of work that contain sub-tasks',\r\n//   },\r\n//   {\r\n//     name: 'type: feature request',\r\n//     color: '#fbca04',\r\n//     description: 'New feature or request',\r\n//   },\r\n//   {\r\n//     name: 'type: question',\r\n//     color: '#d876e3',\r\n//     description: 'Further information is requested',\r\n//   },\r\n// ];\r\n","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\pdf\\certificateGenertorWithPdf.js",["215","216","217"],"import {\r\n  Divider,\r\n  Drawer,\r\n  Fab,\r\n  makeStyles,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { saveAs } from 'file-saver'\r\nimport * as pdfLib from 'pdf-lib'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Document, Page, pdfjs } from 'react-pdf'\r\nimport { drawerWidth } from '../../constants'\r\nimport CustomButton from '../Button'\r\n\r\nconst { PDFDocument, rgb, StandardFonts } = pdfLib\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  btn: {\r\n    margin: theme.spacing(2, 1, 0),\r\n    padding: theme.spacing(1.5, 2)\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    backgroundColor: 'grey'\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(5),\r\n    right: theme.spacing(5)\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    // margin: theme.spacing(30, 1, 0),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n    cursor: 'pointer'\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginRight: drawerWidth\r\n  },\r\n  textField: {\r\n    marginTop: '20px',\r\n    backgroundColor: '#f7f7f7'\r\n  }\r\n}))\r\n\r\nconst CertificateGeneratorWithPdf = () => {\r\n  const classes = useStyles()\r\n  const defaultValue = { name: 'Abhishek Kumar', x: 220, y: 360, size: 50 }\r\n\r\n  const [pdf, setPdf] = useState(null)\r\n  const [numPages, setNumPages] = useState(null)\r\n  const [pageNumber, setPageNumber] = useState(1)\r\n  const [textDrawProperties, setTextDrawProperties] = useState(defaultValue)\r\n  const [open, setOpen] = React.useState(true)\r\n\r\n  useEffect(() => {\r\n    generatePDF(textDrawProperties).then((arr) => setPdf(arr))\r\n  }, [])\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages)\r\n  }\r\n\r\n  function download() {\r\n    if (pdf == null) {\r\n      alert('No New Changes are made on template')\r\n    } else {\r\n      var file = new File([pdf], 'CfcCertificate.pdf', {\r\n        type: 'application/pdf;charset=utf-8'\r\n      })\r\n      saveAs(file)\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setTextDrawProperties({\r\n      ...textDrawProperties,\r\n      [e.target.name]: e.target.value\r\n    })\r\n    console.log(e.target.name)\r\n  }\r\n\r\n  const resetToDefault = () => {\r\n    setTextDrawProperties(defaultValue)\r\n    generatePDF(defaultValue).then((arr) => setPdf(arr))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {pdf !== null ? (\r\n        <Document\r\n          file={{ data: pdf }}\r\n          onLoadSuccess={onDocumentLoadSuccess}\r\n          onLoadError={console.error}\r\n        >\r\n          <Page pageNumber={pageNumber} />\r\n        </Document>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <Typography>Click on show pdf changes to see the made changes</Typography>\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open={open}\r\n      >\r\n        <TextField\r\n          className={classes.textField}\r\n          value={textDrawProperties.x}\r\n          name=\"x\"\r\n          id=\"outlined-numberX\"\r\n          label=\"Horizontal Position\"\r\n          type=\"number\"\r\n          onChange={handleChange}\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          id=\"outlined-numberY\"\r\n          name=\"y\"\r\n          value={textDrawProperties.y}\r\n          label=\"Vertical Position\"\r\n          type=\"number\"\r\n          onChange={handleChange}\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          className={classes.textField}\r\n          id=\"fontSize\"\r\n          name=\"size\"\r\n          label=\"fontSize\"\r\n          value={textDrawProperties.size}\r\n          type=\"number\"\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n        />\r\n        <CustomButton\r\n          className={classes.btn}\r\n          title=\"Show Pdf changes\"\r\n          style={{ backgroundColor: '#f9af28' }}\r\n          onClick={() => {\r\n            const val = 'Abhishek Kumar'\r\n            //check if the text is empty or not\r\n            if (val.trim() !== '') {\r\n              // console.log(val);\r\n              generatePDF(textDrawProperties).then((arr) => {\r\n                setPdf(arr)\r\n              })\r\n            } else {\r\n              console.log('Empty String')\r\n            }\r\n          }}\r\n        />\r\n        <CustomButton\r\n          className={classes.btn}\r\n          title=\"Reset To Default\"\r\n          onClick={() => {\r\n            resetToDefault()\r\n          }}\r\n        ></CustomButton>\r\n        <CustomButton\r\n          style={{ backgroundColor: '#03506a' }}\r\n          className={classes.btn}\r\n          title=\"Download\"\r\n          onClick={() => {\r\n            download()\r\n          }}\r\n        />\r\n        <Divider style={{ marginTop: '25vh' }} />\r\n        <div\r\n          className={classes.drawerHeader}\r\n          onClick={() => {\r\n            setOpen(!open)\r\n          }}\r\n        >\r\n          <IconButton>\r\n            <ChevronRightIcon />\r\n          </IconButton>\r\n          <Typography style={{ display: 'inline' }}>Close</Typography>\r\n        </div>\r\n      </Drawer>\r\n      {!open ? (\r\n        <Fab\r\n          className={classes.fab}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setOpen(!open)\r\n          }}\r\n        >\r\n          {open ? <CloseIcon /> : <EditIcon />}\r\n        </Fab>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst generatePDF = async (properties) => {\r\n  const { name, x, y, size } = properties\r\n  console.log('X:' + x + 'y: ' + y)\r\n  const existingPdfBytes = await fetch('t2.pdf').then((res) =>\r\n    res.arrayBuffer()\r\n  )\r\n\r\n  // Load a PDFDocument from the existing PDF bytes\r\n  const pdfDoc = await PDFDocument.load(existingPdfBytes)\r\n  // pdfDoc.registerFontkit(fontkit);\r\n\r\n  // //get font\r\n  // const fontBytes = await fetch(\"Source Serif Pro\").then((res) =>\r\n  //   res.arrayBuffer()\r\n  // );\r\n\r\n  // Embed our custom font in the document\r\n  const helveticaFont = await pdfDoc.embedFont(StandardFonts.HelveticaBold)\r\n\r\n  // Get the first page of the document\r\n  const pages = pdfDoc.getPages()\r\n  const firstPage = pages[0]\r\n\r\n  firstPage.drawText(name, {\r\n    x: parseInt(x),\r\n    y: parseInt(y),\r\n    size: parseInt(size),\r\n    font: helveticaFont,\r\n    color: rgb(0.7, 0.625, 0.35)\r\n  })\r\n\r\n  return await pdfDoc.save()\r\n}\r\n\r\nexport default CertificateGeneratorWithPdf\r\n","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\pages\\csv\\csvUpload.js",["218"],"import { AppBar, makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport CsvReader from '../../components/csv'\r\nimport MainLayout from '../../layout'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    textAlign: 'center'\r\n  },\r\n  heading: {\r\n    fontSize: 40,\r\n    fontWeight: 700,\r\n    color: theme.palette.primary.main,\r\n    padding: theme.spacing(3, 0, 6)\r\n  }\r\n}))\r\n\r\nconst CsvUpload = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <MainLayout>\r\n      <div className={classes.root}>\r\n        <Typography align=\"center\" className={classes.heading}>\r\n          Please Import Your CSV File Here\r\n        </Typography>\r\n        <CsvReader />\r\n      </div>\r\n    </MainLayout>\r\n  )\r\n}\r\n\r\nexport default CsvUpload\r\n","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\theme\\typography.js",["219"],"\r\nexport default {\r\n  fontFamily: [\"Montserrat\"].join(','),\r\n\r\n  h1: {\r\n    fontWeight: 700,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 600,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 600,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 600,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 600,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 700,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  body1: {\r\n    fontWeight: 400,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  body2: {\r\n    fontWeight: 400,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  },\r\n  caption: {\r\n    fontWeight: 500\r\n  }\r\n}\r\n","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\theme\\shadow.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\pages\\404\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\pages\\ImageCanvas\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\csv.js",["220","221","222","223"],"import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  makeStyles,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport React, { useReducer, useState } from 'react'\r\nimport { CSVReader } from 'react-papaparse'\r\nimport Table from './table'\r\nimport { Link } from 'react-router-dom'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\n// import\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  button: {\r\n    marginTop: '20px',\r\n    padding: '8px 24px',\r\n    backgroundColor: 'pink'\r\n  },\r\n  box: {\r\n    backgroundColor: '#ee6401',\r\n    width: 'max-content',\r\n    padding: '12px 18px',\r\n    borderRadius: '6px',\r\n    marginTop: '32px',\r\n    margin: 'auto'\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: '#fff',\r\n    width: 'max-content',\r\n    display: 'block',\r\n    margin: 'auto'\r\n  }\r\n}))\r\n\r\nconst CsvReaderComponent = () => {\r\n  const classes = useStyles()\r\n\r\n  const [csvData, setCsvData] = useState(null)\r\n  const [columns, setColumns] = useState(null)\r\n  const [selectedData, setSelectedData] = useState([])\r\n\r\n  const mapColumns = (cols) => {\r\n    const colArray = []\r\n    cols.map((col, index) => {\r\n      return colArray.push({ index: index, column: col })\r\n    })\r\n    setColumns(colArray)\r\n  }\r\n\r\n  const handleOnDrop = (data, file) => {\r\n    console.log('---------------------------')\r\n    console.log(data)\r\n    console.log('---------------------------')\r\n\r\n    const dataArray = []\r\n\r\n    data.map((element) => {\r\n      return dataArray.push(element.data)\r\n    })\r\n\r\n    setCsvData(dataArray)\r\n    mapColumns(dataArray[0])\r\n\r\n    if (\r\n      !(\r\n        file.type === 'text/csv' ||\r\n        file.type === '.csv' ||\r\n        file.type === 'application/vnd.ms-excel'\r\n      )\r\n    ) {\r\n      handleOnError(\r\n        'File not compatible',\r\n        file.name,\r\n        file,\r\n        'File not compatible, provide only csv parsable files'\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleOnError = (err, file, inputElem, reason) => {\r\n    console.log('error here---------------******')\r\n    console.log('file: ' + file)\r\n    console.log(err)\r\n  }\r\n\r\n  const handleOnRemoveFile = (data) => {\r\n    console.log('---------------------------')\r\n    console.log(data)\r\n    setCsvData(null)\r\n    console.log('---------------------------')\r\n  }\r\n\r\n  const show = (newValue) => {\r\n    console.log('hei')\r\n    console.log(newValue)\r\n    const selectedDataForCerts = []\r\n    if (newValue.length !== 0) {\r\n      csvData.map((arrayItem, index) => {\r\n        const item = []\r\n        newValue.map(({ column, index }, i) => {\r\n          const obj = {}\r\n          obj.csvIdx = index\r\n          obj.index = i\r\n          obj.title = arrayItem[index]\r\n          item.push(obj)\r\n        })\r\n        selectedDataForCerts.push(item)\r\n      })\r\n    }\r\n    setSelectedData(selectedDataForCerts)\r\n    console.log(columns)\r\n    console.log(newValue)\r\n    console.log(selectedDataForCerts)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <CSVReader\r\n        onDrop={handleOnDrop}\r\n        onError={handleOnError}\r\n        addRemoveButton\r\n        onRemoveFile={handleOnRemoveFile}\r\n      >\r\n        <span>Click or drop your csv file here</span>\r\n      </CSVReader>\r\n      {columns === null ? (\r\n        ''\r\n      ) : (\r\n        <Autocomplete\r\n          style={{ margin: '32px auto', width: '80%' }}\r\n          multiple\r\n          id=\"tags-outlined\"\r\n          options={columns}\r\n          getOptionLabel={(option) => option.column}\r\n          onChange={(event, newValue) => {\r\n            show(newValue)\r\n            // setSelectedColumns(newValue)\r\n          }}\r\n          // filterSelectedOptions\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              placeholder=\"Select Columns\"\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n\r\n      {selectedData.length === 0 ? (\r\n        <Box className={classes.box}>\r\n          {csvData === null\r\n            ? 'First, Import Csv File'\r\n            : 'Please select columns'}\r\n        </Box>\r\n      ) : (\r\n        <Link\r\n          to={{ pathname: '/image-canvas', state: selectedData }}\r\n          className={classes.link}\r\n        >\r\n          <Box className={classes.box}>\r\n            {selectedData.length === 0 ? 'Please select columns' : \"Let's Go\"}\r\n          </Box>\r\n        </Link>\r\n      )}\r\n\r\n      {csvData === null ? (\r\n        ''\r\n      ) : (\r\n        <div style={{ marginTop: '80px' }}>\r\n          <Typography>Table Preview</Typography>\r\n          <Table {...csvData} />\r\n        </div>\r\n      )}\r\n      <Box height=\"120px\" />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CsvReaderComponent\r\n","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\constants\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\Button\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\image\\cecrtificateGeneratorByImage.js",["224","225","226","227"],"import {\r\n  Divider,\r\n  Drawer,\r\n  Fab,\r\n  makeStyles,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport clsx from 'clsx'\r\nimport jsPDF from 'jspdf'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { drawerWidth } from '../../constants'\r\nimport ButtonComponent from '../Button'\r\nimport templates from '../../data'\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // textAlign: 'center',\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(5)\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    backgroundColor: 'grey'\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(5),\r\n    right: theme.spacing(5)\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    // margin: theme.spacing(30, 1, 0),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n    cursor: 'pointer'\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginRight: drawerWidth\r\n  },\r\n  textField: {\r\n    margin: '20px 4px 0px',\r\n    backgroundColor: '#f7f7f7',\r\n    width: '120px'\r\n  },\r\n  btn: {\r\n    margin: theme.spacing(2, 2, 0),\r\n    padding: theme.spacing(1.5, 2)\r\n  }\r\n}))\r\n\r\nfunction CertificateGeneratorByImage({ data }) {\r\n  const classes = useStyles()\r\n  const canvas = useRef()\r\n  let ctx = null\r\n\r\n  const [textDrawProperties, setTextDrawProperties] = useState(\r\n    templates.png[0].text\r\n  )\r\n  const [open, setOpen] = React.useState(false)\r\n  const [state, forceUpdate] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setTextDrawProperties(modifyield(textDrawProperties, data[0]))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // dynamically assign the width and height to canvas\r\n    const canvasEle = canvas.current\r\n    var imageObj1 = new Image()\r\n    imageObj1.src = 't1.png'\r\n    imageObj1.onload = function () {\r\n      canvasEle.width = imageObj1.width\r\n      canvasEle.height = imageObj1.height\r\n    }\r\n    // get context of the canvas\r\n    ctx = canvasEle.getContext('2d')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    updateCanvas()\r\n  })\r\n\r\n  function downloadImage(uri, name) {\r\n    var link = document.createElement('a')\r\n    link.download = name\r\n    link.href = uri\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n  }\r\n\r\n  function downloadPdf(uri, name) {\r\n    const pdf = new jsPDF({ orientation: 'landscape' })\r\n    const imgProps = pdf.getImageProperties(uri)\r\n    const pdfWidth = pdf.internal.pageSize.getWidth()\r\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width\r\n    pdf.addImage(uri, 'JPEG', 0, 0, pdfWidth, pdfHeight)\r\n    pdf.save(`${name}.pdf`)\r\n  }\r\n\r\n  console.log(data)\r\n\r\n  function updateCanvas() {\r\n    // var {x, y} = cordinates\r\n    const canvasEle = canvas.current\r\n    ctx = canvasEle.getContext('2d')\r\n    var imageObj1 = new Image()\r\n    imageObj1.src = 't1.png'\r\n    imageObj1.onload = function () {\r\n      ctx.drawImage(imageObj1, 0, 0)\r\n      textDrawProperties.map((text, index) => {\r\n        ctx.font = `${text.size}pt Montserrat-Black`\r\n        ctx.fillStyle = 'white'\r\n        ctx.fillText(data[1][index].title, text.x, text.y)\r\n      })\r\n      forceUpdate(true)\r\n    }\r\n  }\r\n\r\n  const handleChange = (index) => (e) => {\r\n    let newArray = [...textDrawProperties]\r\n    newArray[index][e.target.name] = e.target.value\r\n    setTextDrawProperties(newArray)\r\n  }\r\n\r\n  const resetToDefault = () => {\r\n    window.location.reload()\r\n  }\r\n\r\n  const addField = () => {\r\n    setTextDrawProperties([\r\n      ...textDrawProperties,\r\n      {\r\n        title: 'Title',\r\n        x: Math.floor(Math.random() * 100) + 80,\r\n        y: Math.floor(Math.random() * 100) + 80,\r\n        size: 50\r\n      }\r\n    ])\r\n  }\r\n\r\n  const removeField = (index) => {\r\n    let arr = [...textDrawProperties]\r\n    arr.splice(index, 1)\r\n    setTextDrawProperties(arr)\r\n  }\r\n\r\n  function sendReq() {\r\n    axios({\r\n      url: 'http://localhost:5001/cert',\r\n      method: 'POST',\r\n      data: {\r\n        template: 't1.png',\r\n        textProps: [...textDrawProperties],\r\n        csv: [...data]\r\n      }\r\n    })\r\n      .then((res) => {\r\n        console.log(res)\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.appBarShift]: open\r\n      })}\r\n    >\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open={open}\r\n      >\r\n        <ul>\r\n          {textDrawProperties.map((properties, index) => (\r\n            <li key={index}>\r\n              <div style={{ display: 'block', marginTop: '20px' }}>\r\n                {/* <TextField\r\n                  name=\"title\"\r\n                  value={properties.title}\r\n                  onChange={handleChange(index)}\r\n                /> */}\r\n                <Typography\r\n                  style={{ display: 'inline-block', marginRight: '26px' }}\r\n                >\r\n                  {properties.title}\r\n                </Typography>\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  size=\"small\"\r\n                  style={{\r\n                    position: 'absolute',\r\n                    backgroundColor: 'red',\r\n                    color: 'white'\r\n                  }}\r\n                  onClick={() => removeField(index)}\r\n                >\r\n                  {/* <RemoveIcon /> */}\r\n                  <Typography variant=\"caption\" style={{ fontWeight: 600 }}>\r\n                    Delete\r\n                  </Typography>\r\n                </Fab>\r\n              </div>\r\n              <TextField\r\n                className={classes.textField}\r\n                value={properties.x}\r\n                name=\"x\"\r\n                id=\"outlined-numberX\"\r\n                label=\"X\"\r\n                type=\"number\"\r\n                onChange={handleChange(index)}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                className={classes.textField}\r\n                id=\"outlined-numberY\"\r\n                name=\"y\"\r\n                value={properties.y}\r\n                label=\"Y\"\r\n                type=\"number\"\r\n                onChange={handleChange(index)}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                className={classes.textField}\r\n                id=\"fontSize\"\r\n                name=\"size\"\r\n                label=\"Size\"\r\n                value={properties.size}\r\n                type=\"number\"\r\n                onChange={handleChange(index)}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <ButtonComponent\r\n          disabled={textDrawProperties.length === data[0].length}\r\n          style={{ backgroundColor: '#f9af28' }}\r\n          title=\"Add Field\"\r\n          className={classes.btn}\r\n          onClick={addField}\r\n        />\r\n        <ButtonComponent\r\n          className={classes.btn}\r\n          title=\"Reset To Default\"\r\n          style={{ backgroundColor: '#ee6401' }}\r\n          onClick={() => {\r\n            resetToDefault()\r\n          }}\r\n        ></ButtonComponent>\r\n        <ButtonComponent\r\n          className={classes.btn}\r\n          title=\"Download\"\r\n          onClick={() => {\r\n            const c = canvas.current\r\n            downloadPdf(c.toDataURL('png'), 'certificate-pdf')\r\n            downloadImage(c.toDataURL('png'), 'certificate-image')\r\n          }}\r\n        />\r\n        <ButtonComponent\r\n          className={classes.btn}\r\n          title=\"Send to servers\"\r\n          style={{ backgroundColor: '#03506a' }}\r\n          onClick={() => {\r\n            sendReq()\r\n          }}\r\n        />\r\n        <Divider style={{ marginTop: '0vh' }} />\r\n        <div\r\n          className={classes.drawerHeader}\r\n          onClick={() => {\r\n            setOpen(!open)\r\n          }}\r\n        >\r\n          <IconButton>\r\n            <ChevronRightIcon />\r\n          </IconButton>\r\n          <Typography style={{ display: 'inline' }}>Close</Typography>\r\n        </div>\r\n      </Drawer>\r\n\r\n      <canvas ref={canvas}></canvas>\r\n      {!open ? (\r\n        <Fab\r\n          className={classes.fab}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setOpen(!open)\r\n          }}\r\n        >\r\n          {open ? <CloseIcon /> : <EditIcon />}\r\n        </Fab>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction modifyield(defaultArray, dataArray) {\r\n  while (dataArray.length > defaultArray.length) {\r\n    defaultArray.push({\r\n      title: 'Title',\r\n      x: Math.floor(Math.random() * 100) + 80,\r\n      y: Math.floor(Math.random() * 100) + 80,\r\n      size: Math.floor(Math.random() * 100) + 10\r\n    })\r\n  }\r\n  const deleteCount = defaultArray.length - dataArray.length\r\n  if (dataArray.length < defaultArray.length) {\r\n    defaultArray.splice(-1, deleteCount)\r\n  }\r\n  return defaultArray\r\n}\r\n\r\nexport default CertificateGeneratorByImage\r\n","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\data\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\index.js",["228","229","230"],"import React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Hidden,\r\n  Toolbar,\r\n  Typography,\r\n  Link,\r\n  makeStyles\r\n} from '@material-ui/core'\r\nimport Logo from './Logo'\r\nimport Item from './Item'\r\nimport Account from './Account'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\n// import { HashLink as Link } from 'react-router-hash-link';\r\nimport LoginDialog from './LoginDialog'\r\n// import { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    zIndex: theme.zIndex.drawer + 100,\r\n    backgroundColor: theme.palette.background,\r\n    paddingLeft: 70,\r\n    paddingRight: 70,\r\n    top: 'auto',\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingLeft: 15,\r\n      paddingRight: 15\r\n    }\r\n  },\r\n  toolbar: {\r\n    minHeight: 64,\r\n    maxHeight: 64\r\n  },\r\n  menuButton: {\r\n    float: 'right',\r\n    color: '#000',\r\n    marginRight: '0px'\r\n  },\r\n  list: {\r\n    width: '100% !important',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  textStyle: {\r\n    textDecoration: 'none'\r\n  }\r\n}))\r\n\r\nfunction TopBar({ className, onMobileNavOpen, ...rest }) {\r\n  const classes = useStyles()\r\n  // const user = useSelector(state => state.account.user);\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  })\r\n\r\n  const pathname = window.location.pathname\r\n\r\n  const navItems = [\r\n    // { title: 'User', link: '/user' },\r\n  ]\r\n\r\n  const list = () => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer('right', false)}\r\n      onKeyDown={toggleDrawer('right', false)}\r\n    >\r\n      <List>\r\n        {navItems.map((item, index) => (\r\n          <ListItem button key={index}>\r\n            <Link\r\n              smooth\r\n              to={item.link}\r\n              variant=\"h5\"\r\n              className={classes.textStyle}\r\n            >\r\n              <Typography variant=\"h4\" color=\"textPrimary\">\r\n                {item.title}\r\n              </Typography>\r\n            </Link>\r\n          </ListItem>\r\n        ))}\r\n        {/* {!user ? (\r\n          <ListItem>\r\n            <Account />\r\n          </ListItem>\r\n        ) : (\r\n          <div />\r\n        )} */}\r\n      </List>\r\n    </div>\r\n  )\r\n  const headerMoblie = () => (\r\n    <div>\r\n      <RouterLink\r\n        to=\"/\"\r\n        onClick={toggleDrawer('right', false)}\r\n        style={{ position: 'absolute', left: '20px', top: '3%' }}\r\n      >\r\n        <Logo className={classes.logo} />\r\n      </RouterLink>\r\n      <Box ml={8}>\r\n        <IconButton\r\n          edge=\"end\"\r\n          className={classes.menuButton}\r\n          aria-label=\"menu\"\r\n          onClick={toggleDrawer('right', false)}\r\n          style={{ position: 'absolute', right: '15px', top: '1%' }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </div>\r\n  )\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open })\r\n  }\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} {...rest}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/\">\r\n          <Logo className={classes.logo} />\r\n        </RouterLink>\r\n        <Typography variant=\"h4\" style={{ color: '#fff', marginLeft: '16px' }}>\r\n          Certificate Generator\r\n        </Typography>\r\n        <Hidden smDown>\r\n          <Box ml={2} flexGrow={1} />\r\n          {navItems.map((item, index) => (\r\n            <Item\r\n              active={item.link === pathname}\r\n              title={item.title}\r\n              link={item.link}\r\n            />\r\n          ))}\r\n          <Box ml={2} flexGrow={0.05} />\r\n          <Box ml={2} flexGrow={0.05} />\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          {/* <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            style={{ position: 'absolute', right: '0px' }}\r\n          >\r\n            <LoginDialog />\r\n            {user ? <Account /> : <div />}\r\n            <IconButton\r\n              edge=\"end\"\r\n              className={classes.menuButton}\r\n              aria-label=\"menu\"\r\n              onClick={toggleDrawer('right', true)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Box> */}\r\n          <Drawer\r\n            width={'100%'}\r\n            anchor=\"right\"\r\n            open={state['right']}\r\n            onClose={toggleDrawer('right', false)}\r\n          >\r\n            {headerMoblie()}\r\n            {list()}\r\n          </Drawer>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n}\r\n\r\nexport default TopBar\r\n","C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\LoginDialog.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\Logo.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\Account.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\Item.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\layout\\TopBar\\HeaderItems.js",[],"C:\\Users\\Sherin Sneha\\Documents\\Certificate-generator-react\\client\\src\\components\\table.js",["231"],"import React from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { TablePagination } from '@material-ui/core'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell)\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  }\r\n}))(TableRow)\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '40px 0px'\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  }\r\n})\r\n\r\nexport default function CustomizedTables(csvData) {\r\n  const classes = useStyles()\r\n  const [page, setPage] = React.useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value)\r\n    setPage(0)\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>{csvData[0][0]}</StyledTableCell>\r\n              {csvData[0].map((ele, index) =>\r\n                index !== 0 ? (\r\n                  <StyledTableCell align=\"right\">{ele}</StyledTableCell>\r\n                ) : (\r\n                  <></>\r\n                )\r\n              )}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.keys(csvData)\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage + 1)\r\n              .map((key, index) => {\r\n                if (index !== 0 || page !== 0) {\r\n                  // 0th index is usually data header\r\n                  return (\r\n                    <StyledTableRow key={csvData[key][0]}>\r\n                      <StyledTableCell component=\"th\" scope=\"row\">\r\n                        {csvData[key][0]}\r\n                      </StyledTableCell>\r\n\r\n                      {csvData[key].map((ele, index) =>\r\n                        index !== 0 ? (\r\n                          <StyledTableCell align=\"right\">{ele}</StyledTableCell>\r\n                        ) : (\r\n                          <></>\r\n                        )\r\n                      )}\r\n                    </StyledTableRow>\r\n                  )\r\n                }\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25, 100]}\r\n        component=\"div\"\r\n        count={Object.keys(csvData).length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  )\r\n}\r\n","C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\App.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\Routes.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\theme\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\temp.js",["232"],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\pdf\\certificateGenertorWithPdf.js",["233","234","235"],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\pages\\csv\\csvUpload.js",["236"],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\pages\\404\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\pages\\ImageCanvas\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\theme\\typography.js",["237"],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\theme\\shadow.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\csv.js",["238","239","240","241"],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\constants\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\image\\cecrtificateGeneratorByImage.js",["242","243","244","245"],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\Button\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\components\\table.js",["246"],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\index.js",["247","248","249"],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\data\\index.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\LoginDialog.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\Account.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\Item.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\Logo.js",[],"C:\\Users\\Sherin Sneha\\Documents\\GitHub\\certificate-generator\\client\\src\\layout\\TopBar\\HeaderItems.js",[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":7,"column":8,"nodeType":"256","messageId":"257","endLine":7,"endColumn":12},{"ruleId":"254","severity":1,"message":"258","line":71,"column":10,"nodeType":"256","messageId":"257","endLine":71,"endColumn":18},{"ruleId":"254","severity":1,"message":"259","line":72,"column":22,"nodeType":"256","messageId":"257","endLine":72,"endColumn":35},{"ruleId":"260","severity":1,"message":"261","line":78,"column":6,"nodeType":"262","endLine":78,"endColumn":8,"suggestions":"263"},{"ruleId":"254","severity":1,"message":"264","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":16},{"ruleId":"265","severity":1,"message":"266","line":2,"column":1,"nodeType":"267","endLine":51,"endColumn":2},{"ruleId":"254","severity":1,"message":"268","line":3,"column":3,"nodeType":"256","messageId":"257","endLine":3,"endColumn":9},{"ruleId":"254","severity":1,"message":"269","line":9,"column":17,"nodeType":"256","messageId":"257","endLine":9,"endColumn":27},{"ruleId":"270","severity":1,"message":"271","line":103,"column":38,"nodeType":"272","messageId":"273","endLine":103,"endColumn":40},{"ruleId":"270","severity":1,"message":"271","line":105,"column":45,"nodeType":"272","messageId":"273","endLine":105,"endColumn":47},{"ruleId":"254","severity":1,"message":"274","line":77,"column":10,"nodeType":"256","messageId":"257","endLine":77,"endColumn":15},{"ruleId":"260","severity":1,"message":"275","line":81,"column":6,"nodeType":"262","endLine":81,"endColumn":8,"suggestions":"276"},{"ruleId":"260","severity":1,"message":"277","line":93,"column":11,"nodeType":"278","endLine":93,"endColumn":37},{"ruleId":"270","severity":1,"message":"271","line":128,"column":44,"nodeType":"272","messageId":"273","endLine":128,"endColumn":46},{"ruleId":"254","severity":1,"message":"279","line":16,"column":8,"nodeType":"256","messageId":"257","endLine":16,"endColumn":15},{"ruleId":"254","severity":1,"message":"280","line":18,"column":8,"nodeType":"256","messageId":"257","endLine":18,"endColumn":16},{"ruleId":"254","severity":1,"message":"281","line":24,"column":8,"nodeType":"256","messageId":"257","endLine":24,"endColumn":19},{"ruleId":"270","severity":1,"message":"282","line":72,"column":33,"nodeType":"272","messageId":"283","endLine":72,"endColumn":35},{"ruleId":"254","severity":1,"message":"255","line":7,"column":8,"nodeType":"256","messageId":"257","endLine":7,"endColumn":12},{"ruleId":"254","severity":1,"message":"258","line":71,"column":10,"nodeType":"256","messageId":"257","endLine":71,"endColumn":18},{"ruleId":"254","severity":1,"message":"259","line":72,"column":22,"nodeType":"256","messageId":"257","endLine":72,"endColumn":35},{"ruleId":"260","severity":1,"message":"261","line":78,"column":6,"nodeType":"262","endLine":78,"endColumn":8,"suggestions":"284"},{"ruleId":"254","severity":1,"message":"264","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":16},{"ruleId":"265","severity":1,"message":"266","line":2,"column":1,"nodeType":"267","endLine":51,"endColumn":2},{"ruleId":"254","severity":1,"message":"268","line":3,"column":3,"nodeType":"256","messageId":"257","endLine":3,"endColumn":9},{"ruleId":"254","severity":1,"message":"269","line":9,"column":17,"nodeType":"256","messageId":"257","endLine":9,"endColumn":27},{"ruleId":"270","severity":1,"message":"271","line":103,"column":38,"nodeType":"272","messageId":"273","endLine":103,"endColumn":40},{"ruleId":"270","severity":1,"message":"271","line":105,"column":45,"nodeType":"272","messageId":"273","endLine":105,"endColumn":47},{"ruleId":"254","severity":1,"message":"274","line":77,"column":10,"nodeType":"256","messageId":"257","endLine":77,"endColumn":15},{"ruleId":"260","severity":1,"message":"275","line":81,"column":6,"nodeType":"262","endLine":81,"endColumn":8,"suggestions":"285"},{"ruleId":"260","severity":1,"message":"277","line":93,"column":11,"nodeType":"278","endLine":93,"endColumn":37},{"ruleId":"270","severity":1,"message":"271","line":128,"column":44,"nodeType":"272","messageId":"273","endLine":128,"endColumn":46},{"ruleId":"270","severity":1,"message":"282","line":72,"column":33,"nodeType":"272","messageId":"283","endLine":72,"endColumn":35},{"ruleId":"254","severity":1,"message":"279","line":16,"column":8,"nodeType":"256","messageId":"257","endLine":16,"endColumn":15},{"ruleId":"254","severity":1,"message":"280","line":18,"column":8,"nodeType":"256","messageId":"257","endLine":18,"endColumn":16},{"ruleId":"254","severity":1,"message":"281","line":24,"column":8,"nodeType":"256","messageId":"257","endLine":24,"endColumn":19},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"no-unused-vars","'Chip' is defined but never used.","Identifier","unusedVar","'numPages' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'textDrawProperties'. Either include it or remove the dependency array.","ArrayExpression",["288"],"'AppBar' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'useReducer' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'state' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'textDrawProperties'. Either include them or remove the dependency array. You can also do a functional update 'setTextDrawProperties(t => ...)' if you only need 'textDrawProperties' in the 'setTextDrawProperties' call.",["289"],"Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Account' is defined but never used.","'MenuIcon' is defined but never used.","'LoginDialog' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["290"],["291"],"no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"292","fix":"296"},{"desc":"294","fix":"297"},"Update the dependencies array to be: [textDrawProperties]",{"range":"298","text":"299"},"Update the dependencies array to be: [data, textDrawProperties]",{"range":"300","text":"301"},{"range":"302","text":"299"},{"range":"303","text":"301"},[2281,2283],"[textDrawProperties]",[2144,2146],"[data, textDrawProperties]",[2281,2283],[2144,2146]]